@page "/login"
@inject HttpClient _httpClient

@inject IDialogService DialogService
@inject NavigationManager Navigation

<PageTitle>Login</PageTitle>

<MudContainer Class="mt-16 px-8" MaxWidth="MaxWidth.Large">
    <MudPaper Elevation="3" Class="pa-4">
        <MudText Typo="Typo.h5" Class="mb-4">Login</MudText>

        <MudForm Model="loginInfo" OnValidSubmit="HandleSubmit">
            <MudTextField @bind-Value="loginInfo.Email" Label="Email" InputType="InputType.Email" Required="true" />
            <MudTextField @bind-Value="loginInfo.Password" Label="Password" InputType="InputType.Password" Required="true" />

            <br />
            <MudButton Disabled="@isProcessing" Type="ButtonType.Submit" OnClick="SubmitLoginInfo" Variant="Variant.Filled" Color="Color.Primary" FullWidth="true">
                @if (isProcessing)
                {
                    <MudProgressCircular Size="Size.Small" />
                }
                Login
            </MudButton>
        </MudForm>
    </MudPaper>
</MudContainer>

@code {
    LoginInfo loginInfo = new();
    bool isProcessing = false;
    bool loginError;

    private async Task SubmitLoginInfo()
    {
        if (string.IsNullOrEmpty(loginInfo.Password) || string.IsNullOrEmpty(loginInfo.Email))
        {
            await DialogService.ShowMessageBox("Error", "Please enter your email and password.");
            return;
        }
        isProcessing = true;

        var serializedModel = JsonSerializer.Serialize(loginInfo);
        var authenticationResult = await _httpClient.PostAsJsonAsync("api/Auth/login", loginInfo);
        loginError = authenticationResult.StatusCode != HttpStatusCode.Created;

        if (!loginError)
        {
            string token = await authenticationResult.Content.ReadAsStringAsync();
            string tokenParam = $"token={Uri.EscapeDataString(token)}";
            Navigation.NavigateTo($"/login-callback?{tokenParam}");
        }
        else
        {
            isProcessing = false;
            await DialogService.ShowMessageBox("Error", "Invalid email or password.");
        }
    }
}
