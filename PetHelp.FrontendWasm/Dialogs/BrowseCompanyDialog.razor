@* @using MudBlazor
@using job_board.Models;
@using job_board.Utilities;

@inject NavigationManager Navigate
@inject IHttpClientFactory ClientFactory
@inject IDialogService DialogService
@inject TokenAuthStateProvider TokenAuthStateProvider

<MudDialog>
    <DialogContent>
        <MudText>@Company.CompanyDescription</MudText>
        <MudGrid>
            <MudItem xs="12" sm="12">
                @if (CompanyAds.Count == 0)
                {
                    <MudText Typo="Typo.subtitle1">No job listings</MudText>
                    <br />
                    <MudDivider />
                }
                else
                {
                    <br />
                    <MudDivider />
                    <MudPaper Elevation="2" Class="pa-4; overflow-auto" Height="@_jobListHeight">
                        <MudList Clickable="true">
                        @foreach (var ad in CompanyAds)
                        {
                            <MudListItem>
                                <MudText Typo="Typo.h6">@ad.Title</MudText>
                                    <MudText>@ad.Company.CompanyName | @ad.Location</MudText>
                                    <MudSpacer />
                                    <MudText Typo="Typo.subtitle2" Style="@($"color:{Colors.Green.Darken4};")">€@ad.SalaryFrom - €@ad.SalaryTo</MudText>
                                    <MudText Typo="Typo.subtitle2">Posted: @ad.PostedDate</MudText>
                            </MudListItem>
                        }
                    </MudList>
                </MudPaper>
                }
            </MudItem>
            <MudItem xs="12" sm="6">
                <MudText Typo="Typo.h6">About</MudText>
                <MudText Typo="Typo.subtitle1">@Company.Industry</MudText>
                <MudText Typo="Typo.subtitle1">@Company.Email</MudText>
                <MudLink Typo="Typo.subtitle1" Href="@Company.Website">Open Website</MudLink>
             </MudItem>
        </MudGrid>
            <br />
            @if (_error)
        {
            <MudAlert Severity="Severity.Error" IsOpen="true" Class="pt-4 pb-4">@_errorText</MudAlert>
        }
    </DialogContent>
    <DialogActions>
        @if (IsUserCompany)
        {
            <MudButton Color="Color.Error" OnClick="Delete">Delete</MudButton>
            <MudButton Color="Color.Info" OnClick="Update">Update</MudButton>
        }
        <MudButton OnClick="Close">Close</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Parameter] public Company Company { get; set; }
    [Parameter] public List<Ad> CompanyAds { get; set; }
    [Parameter] public bool IsUserCompany { get; set; }
    [Parameter] public int UserId { get; set; }

    private string _jobListHeight = "23vh";

    bool _error = false;
    string _errorText = "You must be the owner of this company to delete it.";

    HttpClient client;
    bool _settingToken = true;

    protected override async Task OnInitializedAsync()
    {
        if (CompanyAds.Count == 1)
            _jobListHeight = "14vh";

        client = ClientFactory.CreateClient("httpClient");
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender && client.DefaultRequestHeaders.Authorization == null)
        {
            var token = await TokenAuthStateProvider.GetTokenRawAsync();
            client.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", token);
            _settingToken = false;
        }
    }

    async void Delete()
    {
        while (_settingToken)
        {
            await Task.Delay(100);
        }

        var response = await client.DeleteAsync($"api/companies/{UserId}");
        if (response.StatusCode == System.Net.HttpStatusCode.NoContent)
        {
            Close();
            await DialogService.ShowMessageBox("Success", "Company deleted successfully.");
            Navigate.NavigateTo("/companies", true, false);
        }
        else
        {
            _error = true;
            _errorText = "An error occurred while deleting company.";
        }
    }

    void Update()
    {
        Navigate.NavigateTo($"/update-company/{Company.Id}");
    }

    void Close() => MudDialog.Cancel();
} *@