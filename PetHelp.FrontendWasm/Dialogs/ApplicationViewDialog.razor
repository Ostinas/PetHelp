@* @using MudBlazor
@using job_board.Models;
@using job_board.ViewModels.Application;
@using job_board.Utilities;

@inject NavigationManager Navigate
@inject IHttpClientFactory ClientFactory
@inject IDialogService DialogService
@inject TokenAuthStateProvider TokenAuthStateProvider

<MudDialog>
    <DialogContent>
        <MudText>@Ad.Description</MudText>
        <br />
        <MudDivider />
        <br />
        <MudGrid>
            <MudItem xs="12" sm="6">
                <MudText Typo="Typo.h6">Contact</MudText>
                <MudText Typo="Typo.subtitle1">@Ad.Company.CompanyName</MudText>
                <MudText Style="word-break: break-all;" Typo="Typo.subtitle1">@Ad.Company.Email</MudText>
                <MudLink Href="@Ad.Company.Website">Open Website</MudLink>
             </MudItem>
            <MudItem xs="12" sm="6">
                <MudText Typo="Typo.h6">Salary</MudText>
                <MudText Typo="Typo.subtitle1" Style="@($"color:{Colors.Green.Darken3};")">€@Ad.SalaryFrom - €@Ad.SalaryTo</MudText>
                <MudText Typo="Typo.h6">Location</MudText>
                <MudText Typo="Typo.subtitle1">@Ad.Location</MudText>
            </MudItem>
            @if (Application.CoverLetter != null && Application.CoverLetter != string.Empty)
            {
                <MudDivider />
                <MudItem xs="12" sm="12">
                    <MudText Typo="Typo.h6">Application</MudText>
                    <MudText Typo="Typo.subtitle1" Style="font-weight: bold">Cover Letter</MudText>
                    <MudText Typo="Typo.subtitle1">@Application.CoverLetter</MudText>
                    <MudDivider Class="mt-2 mb-2" />
                    <MudText Typo="Typo.subtitle1" Style="font-weight: bold">Phone Number</MudText>
                    <MudText Typo="Typo.subtitle1">@Application.PhoneNumber</MudText>
                </MudItem>
            }
        </MudGrid>
        <br />
        @if (_error)
        {
            <MudAlert Severity="Severity.Error" IsOpen="true" Class="pt-4 pb-4">@_errorText</MudAlert>
        }
    </DialogContent>
    <DialogActions>
        @if (IsCandidate)
        {
            <MudButton Color="Color.Error" OnClick="Delete">Delete</MudButton>
            <MudButton Color="Color.Info" OnClick="Update">Update</MudButton>
        }
        <MudButton OnClick="Close">Close</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Parameter] public Ad Ad { get; set; }
    [Parameter] public ApplicationResponseVM Application { get; set; }
    [Parameter] public bool LoggedIn { get; set; }
    [Parameter] public bool IsCandidate { get; set; }

    HttpClient client;
    bool _settingToken = true;

    bool _error = false;
    string _errorText = "An error occurred while deleting application.";

    protected override async Task OnInitializedAsync()
    {
        client = ClientFactory.CreateClient("httpClient");
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender && client.DefaultRequestHeaders.Authorization == null)
        {
            var token = await TokenAuthStateProvider.GetTokenRawAsync();
            client.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", token);
            _settingToken = false;
        }
    }

    async void Delete()
    {
        while (_settingToken)
        {
            await Task.Delay(100);
        }

        var response = await client.DeleteAsync($"api/companies/{Ad.Company.Id}/ads/{Ad.Id}/applications/{Application.Id}");
        if (response.StatusCode == System.Net.HttpStatusCode.NoContent)
        {
            Close();
            await DialogService.ShowMessageBox("Success", "Application deleted successfully.");
            Navigate.NavigateTo("/applications", true, false);
        }
        else
        {
            _error = true;
        }
    }

    void Update()
    {
        Navigate.NavigateTo($"/update-application/{Ad.Company.Id}/{Ad.Id}/{Application.Id}");
    }

    void Close() => MudDialog.Cancel();
} *@