@inject TokenAuthStateProvider TokenAuthStateProvider

<MudNavMenu>
    <MudNavLink Href="/" Match="NavLinkMatch.All">Home</MudNavLink>
    <MudNavLink Href="/ads" Match="NavLinkMatch.Prefix">Browse ads</MudNavLink>
    @if (userRole == "owner")
    {
        <MudNavLink Href="/applicants" Match="NavLinkMatch.Prefix">My applicants</MudNavLink>
    }
</MudNavMenu>

@code {
    bool _drawerOpen = true;
    string? userRole;

    protected override async Task OnInitializedAsync()
    {
        var authState = await TokenAuthStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        var isLoggedIn = authState.User.Identity.IsAuthenticated;

        if (isLoggedIn)
        {
            userRole = user.FindFirst("role")?.Value ?? "applicant";
            StateHasChanged();
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var authState = await TokenAuthStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        var isLoggedIn = authState.User.Identity.IsAuthenticated;
    }

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
}