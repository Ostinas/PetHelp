@inherits LayoutComponentBase

@inject NavigationManager Navigate

<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar>
        <MudHidden Breakpoint="Breakpoint.MdAndUp">
            <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        </MudHidden>
        <MudButton Variant="Variant.Text" Class="ml-3" Href="/"><MudText Typo="Typo.h5" Style="color:white">PetHelp</MudText></MudButton>
        <MudHidden Breakpoint="Breakpoint.SmAndDown">
            <div style="display: flex; flex-direction: row;">
                <MudButton Href="/" Style="color:white">Home</MudButton>
                @* <MudButton Href="/jobs" Style="color:white">Browse Jobs</MudButton> *@
                @* <MudButton Href="/companies" Style="color:white">Browse Companies</MudButton> *@
                @* <MudButton Href="/applications" Style="color:white">Applications</MudButton> *@
            </div>
        </MudHidden>
        <MudSpacer />
        <div>
            <MudContainer>
                <MudAvatar>
                    <MudMenu Icon="@Icons.Material.Filled.AccountCircle" Size="Size.Large" AnchorOrigin="Origin.BottomCenter" TransformOrigin="Origin.TopCenter">
                        @if (_loggedIn)
                        {
                            <MudMenuItem>
                                <MudButton OnClick="Logout" Href="/logout">
                                    <ChildContent>
                                        <MudIcon Icon="@Icons.Material.Filled.ExitToApp" Class="mr-1" />
                                        <MudText Typo="Typo.button" Color="Color.Inherit">Logout</MudText>
                                    </ChildContent>
                                </MudButton>
                            </MudMenuItem>
                        }
                        else
                        {
                            <MudMenuItem>
                                <MudButton OnClick="Login">
                                    <ChildContent>
                                        <MudIcon Icon="@Icons.Material.Filled.ExitToApp" Class="mr-1" />
                                        <MudText Typo="Typo.button" Color="Color.Inherit">Login</MudText>
                                    </ChildContent>
                                </MudButton>
                            </MudMenuItem>
                        }
                    </MudMenu>
                </MudAvatar>
            </MudContainer>
        </div>
    </MudAppBar>
    <MudHidden Breakpoint="Breakpoint.MdAndUp">
        <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
            <NavMenu></NavMenu>
        </MudDrawer>
    </MudHidden>
    <MudMainContent Style="flex-grow: 1; padding-bottom:60px;">
        @Body
    </MudMainContent>
    @* <footer style="width: 100vw; z-index: 1100; position: relative; height: 48px; background-color:rgba(158,158,158,1); max-width:100%; display: flex; justify-content: space-between; align-items: center; padding: 0 1rem;">
        <MudText Typo="Typo.subtitle2" Style="color:white">
            © 2023 Ostinas Mačiulis
        </MudText>
    </footer> *@
</MudLayout>
@code {
    bool _drawerOpen = true;
    bool _loggedIn = false;

    protected override async Task OnInitializedAsync()
    {
        // var authState = await TokenAuthStateProvider.GetAuthenticationStateAsync();
        // var user = authState.User;
        // _loggedIn = authState.User.Identity.IsAuthenticated;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        // var authState = await TokenAuthStateProvider.GetAuthenticationStateAsync();
        // var user = authState.User;
        // _loggedIn = authState.User.Identity.IsAuthenticated;
    }

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    void Login()
    {
        Navigate.NavigateTo("/login");
    }

    void Logout()
    {
        Navigate.NavigateTo("/logout");
    }
}
